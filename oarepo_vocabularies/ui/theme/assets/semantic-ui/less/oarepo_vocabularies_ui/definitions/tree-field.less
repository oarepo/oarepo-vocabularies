/*******************************
            Theme
*******************************/

/*
  The type is the type of the component as defined in semantic-ui - element, collection, view, module
  For simple component, 'element' is the correct type
*/
@type: "module";

/*
  This is the name of the component - though not required, keep it the same as the filename
*/
@element: "tree-field";

@import (multiple) "../../theme.config";

/*
  This is the styling of your component. The class should start with .ui.<component-name>

  Note: use variables here, not the exact values. Placing the values to another file (sample.variables)
  will allow users to override these values.
 */

.ui.tree-field {
  & .columns-container {
    overflow-x: auto;
    height: 70vh;
    width: 100%;
    & .ui.grid {
      height: 100%;
      width: inherit;
    }
  }

  & .content:has(.columns-container) {
    min-height: 60vh;
  }
  & > .header {
    padding-right: 2vw;
    @media only screen and (min-width: @tabletBreakpoint) {
      & {
        padding-right: 4vw;
      }
    }
  }

  & .actions {
    & .ui.label {
      display: flex;
      text-align: left;
      margin: 0.5rem;
      border: 1px solid @treeSelectedBorderColor;
    }
    & .ui.button {
      padding: 0.1rem 0.3rem 0;
      margin-left: 0;
      &:not(.icon) > .icon:not(.button):not(.dropdown) {
        margin: 0;
      }
    }
    & .row .row {
      width: 80%;
      flex-wrap: wrap;
    }
  }

  .ui.header {
    width: 100%;
    font-size: @treeHeaderSize;
    @media only screen and (max-width: @tabletBreakpoint) {
      & {
        text-align: center;
      }
    }
  }
  & .ui.container:not(.page-subheader) {
    align-self: flex-start;
    margin: 1.5rem 1.5rem 0 0;
    display: flex;
    height: 95%;
    min-width: 100%;
    overflow: hidden;
    overflow-x: auto;
    @media only screen and (max-width: @tabletBreakpoint) {
      padding-left: 0;
      &:has(.tree-column:nth-child(2):not(:empty)) {
        min-width: 95%;
      }
    }
  }

  @media only screen and (max-width: @tabletBreakpoint) {
    & .actions .row,
    & .header .row {
      flex-direction: column;
    }
  }
}

/*
  This will load the overrides, enabling the user of your component to override your css if required
 */
.loadUIOverrides();
